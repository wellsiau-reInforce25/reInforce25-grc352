name: 'Push / Commit - Checks'

on:
  push:
    branches: [ main, develop ]

jobs:
  tf-format-and-lint:
    name: 'Terraform Format and linting'
    runs-on: ubuntu-latest
    outputs:
      tflint_status: ${{ steps.tf-lint-run.outcome }}
    steps:
      - uses: actions/checkout@v4

      ###### PLACEHOLDER FOR TF LINTING ######
      - name: Cache plugin dir
        uses: actions/cache@v4
        with:
          path: ~/.tflint.d/plugins
          key: ${{ matrix.os }}-tflint-${{ hashFiles('.tflint.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.2"

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: v0.52.0

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Init TFLint
        id: tf-lint-init
        run: tflint --init --config=.config/tf-lint/.tflint.hcl
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run TFLint
        id: tf-lint-run
        run: tflint --config=.config/tf-lint/.tflint.hcl
      ########################################

  tf-static-checks:
    name: 'Terraform Static Checks'
    runs-on: ubuntu-latest
    needs: [tf-format-and-lint]
    outputs:
      checkov_status: ${{ steps.checkov-run.outcome }}
    steps:
      - uses: actions/checkout@v4

      ###### PLACEHOLDER FOR CHECKOV TF ######
      - name: Checkov HCL Scan
        id: checkov-run
        uses: bridgecrewio/checkov-action@v12
        with:
          config_file: .config/checkov/.checkov.yaml
          output_format: cli
          output_file_path: console
          framework: terraform
          directory: ./terraform

      - name: Checkov Report
        id: checkov-report
        working-directory: ./terraform
        if: always()
        env:
          CHECKOV_STATUS: "${{ steps.checkov-run.outcome }}"
        run: |
          echo "Checkov scan status: $CHECKOV_STATUS" >> $GITHUB_STEP_SUMMARY
          echo "$CHECKOV_RESULTS" >> $GITHUB_STEP_SUMMARY
      ########################################

  cfn-format-and-lint:
    name: 'CloudFormation Format and linting'
    runs-on: ubuntu-latest
    outputs:
      cfnlint_status: ${{ steps.cfn-lint-run.outcome }}
    steps:
      - uses: actions/checkout@v4

      ###### PLACEHOLDER FOR CFN LINTING ######
      - name: Setup Cfn Lint
        id: cfn-lint
        uses: scottbrenner/cfn-lint-action@v2

      - name: Run Cfn Lint
        id: cfn-lint-run
        run: |
          shopt -s globstar # enable globbing
          cfn-lint --version
          cfn-lint -t ./cloudformation/*.yaml
      #########################################

  cfn-static-checks:
    name: 'CloudFormation Static Checks'
    runs-on: ubuntu-latest
    needs: [cfn-format-and-lint]
    outputs:
      checkov_status: ${{ steps.checkov-run.outcome }}
    steps:
      - uses: actions/checkout@v4

      ###### PLACEHOLDER FOR CHECKOV CFN ######
      - name: Checkov CFN Scan
        id: checkov-run
        uses: bridgecrewio/checkov-action@v12
        with:
          config_file: .config/checkov/.checkov.yaml
          output_format: cli
          output_file_path: console
          framework: cloudformation
          directory: ./cloudformation

      - name: Checkov Report
        id: checkov-report
        if: always()
        env:
          CHECKOV_STATUS: "${{ steps.checkov-run.outcome }}"
        run: |
          echo "Checkov scan status: $CHECKOV_STATUS" >> $GITHUB_STEP_SUMMARY
          echo "$CHECKOV_RESULTS" >> $GITHUB_STEP_SUMMARY
      #########################################

###### PLACEHOLDER FOR SUMMARY STEP ######
  summary-report:
    name: 'Summary Report'
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
    needs: [tf-format-and-lint, tf-static-checks, cfn-format-and-lint, cfn-static-checks]
    if: always()
    steps:
      - name: Create Summary Table
        uses: actions/github-script@v6
        if: always()
        env:
          TF_LINT_STATUS: ${{ needs.tf-format-and-lint.outputs.tflint_status }}
          TF_STATIC_STATUS: ${{ needs.tf-static-checks.outputs.checkov_status }}
          CFN_LINT_STATUS: ${{ needs.cfn-format-and-lint.outputs.cfnlint_status }}
          CFN_STATIC_STATUS: ${{ needs.cfn-static-checks.outputs.checkov_status }}
        with:
          script: |
            // Create a status emoji based on the outcome
            const getStatusEmoji = (status) => {
              if (!status) return '❓';
              switch(status.toLowerCase()) {
                case 'success': return '✅';
                case 'failure': return '❌';
                case 'cancelled': return '⚠️';
                case 'skipped': return '⏭️';
                default: return '❓';
              }
            };

            // Create a summary table
            const summary = `## Commit Push Workflow Summary

            | Check | Status | Details |
            | ----- | ------ | ------- |
            | TF Lint | ${getStatusEmoji(process.env.TF_LINT_STATUS)} | ${process.env.TF_LINT_STATUS || 'N/A'} |
            | TF Static Analysis | ${getStatusEmoji(process.env.TF_STATIC_STATUS)} | ${process.env.TF_STATIC_STATUS || 'N/A'} |
            | CFN Lint | ${getStatusEmoji(process.env.CFN_LINT_STATUS)} | ${process.env.CFN_LINT_STATUS || 'N/A'} |
            | CFN Static Analysis | ${getStatusEmoji(process.env.CFN_STATIC_STATUS)} | ${process.env.CFN_STATIC_STATUS || 'N/A'} |

            *Generated at: ${new Date().toISOString()}*
            `;

            // Write to the job summary
            await core.summary
              .addRaw(summary)
              .write();
###########################################